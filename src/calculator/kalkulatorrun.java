/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package calculator;

import java.io.File;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.Row;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;



/**
 *
 * @author Asus
 */
public final class kalkulatorrun extends javax.swing.JFrame {

    private final DefaultTableModel model;
    public Statement cn;

    /**
     * Creates new form kalkulatorrun
     */
    public kalkulatorrun() {
        initComponents();
        model = new DefaultTableModel();
        tabelCalculator.setModel(model);

        model.addColumn("Bilangan1");
        model.addColumn("Bilangan2");
        model.addColumn("Hasil");
        loadData();
    }
    
    public void loadData() {

        try {
            Connection c = KoneksiDatabase.getKoneksi();
            try (Statement s = c.createStatement()) {
                String sql = "SELECT * FROM `tabelkalkulator`";
                try (ResultSet r = s.executeQuery(sql)) {
                    while (r.next()) {
                        // lakukan penelusuran baris
                        Object[] o = new Object[3];
                        o[0] = r.getString("Bilangan1");
                        o[1] = r.getString("Bilangan2");
                        o[2] = r.getString("Hasil");
                        model.addRow(o);
                    }
                }
            }
        } catch (SQLException e) {
            System.out.println("Terjadi Error");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        input_bil1 = new javax.swing.JTextField();
        input_bil2 = new javax.swing.JTextField();
        tambah = new javax.swing.JButton();
        kurang = new javax.swing.JButton();
        kali = new javax.swing.JButton();
        bagi = new javax.swing.JButton();
        output_hasil = new javax.swing.JTextField();
        keluar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelCalculator = new javax.swing.JTable();
        report = new javax.swing.JButton();
        hapus = new javax.swing.JButton();
        print = new javax.swing.JButton();
        txtDir = new javax.swing.JTextField();
        open = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel1.setText("Kalkulator");

        input_bil1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                input_bil1ActionPerformed(evt);
            }
        });

        tambah.setText("+");
        tambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tambahActionPerformed(evt);
            }
        });

        kurang.setText("-");
        kurang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kurangActionPerformed(evt);
            }
        });

        kali.setText("x");
        kali.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kaliActionPerformed(evt);
            }
        });

        bagi.setText(":");
        bagi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bagiActionPerformed(evt);
            }
        });

        output_hasil.setEditable(false);
        output_hasil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                output_hasilActionPerformed(evt);
            }
        });

        keluar.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        keluar.setText("Keluar");
        keluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                keluarActionPerformed(evt);
            }
        });

        tabelCalculator.setBackground(new java.awt.Color(255, 255, 204));
        tabelCalculator.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        tabelCalculator.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Bilangan1", "Bilangan2", "Hasil"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabelCalculator);

        report.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        report.setText("Report");
        report.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reportActionPerformed(evt);
            }
        });

        hapus.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        hapus.setText("Hapus");
        hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapusActionPerformed(evt);
            }
        });

        print.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        print.setText("Export");
        print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printActionPerformed(evt);
            }
        });

        open.setText("Open File");
        open.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(input_bil2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(input_bil1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(tambah, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(kurang, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(kali)
                                            .addComponent(bagi)))
                                    .addComponent(output_hasil, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(report, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(hapus)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(print)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(keluar))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtDir, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addComponent(open))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(input_bil1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(input_bil2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tambah)
                            .addComponent(kali)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(kurang)
                    .addComponent(bagi)
                    .addComponent(keluar)
                    .addComponent(print)
                    .addComponent(hapus)
                    .addComponent(report))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(output_hasil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(open))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void input_bil1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_input_bil1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_input_bil1ActionPerformed

    private void tambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tambahActionPerformed
        // TODO add your handling code here:
        double bil1, bil2, hasil;
        bil1 = Double.parseDouble(this.input_bil1.getText());
        bil2 = Double.parseDouble(this.input_bil2.getText());
        hasil = bil1 + bil2;

        this.output_hasil.setText("" + hasil);
    }//GEN-LAST:event_tambahActionPerformed

    private void kaliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kaliActionPerformed
        // TODO add your handling code here:
        double bil1, bil2, hasil;
        bil1 = Double.parseDouble(this.input_bil1.getText());
        bil2 = Double.parseDouble(this.input_bil2.getText());
        hasil = bil1 * bil2;

        this.output_hasil.setText("" + hasil);
    }//GEN-LAST:event_kaliActionPerformed

    private void kurangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kurangActionPerformed
        // TODO add your handling code here:
        double bil1, bil2, hasil;
        bil1 = Double.parseDouble(this.input_bil1.getText());
        bil2 = Double.parseDouble(this.input_bil2.getText());
        hasil = bil1 - bil2;

        this.output_hasil.setText("" + hasil);
    }//GEN-LAST:event_kurangActionPerformed

    private void bagiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bagiActionPerformed
        // TODO add your handling code here:
        double bil1, bil2, hasil;
        bil1 = Double.parseDouble(this.input_bil1.getText());
        bil2 = Double.parseDouble(this.input_bil2.getText());
        hasil = bil1 / bil2;

        this.output_hasil.setText("" + hasil);
    }//GEN-LAST:event_bagiActionPerformed

    private void keluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_keluarActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_keluarActionPerformed

    private void reportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportActionPerformed
        // TODO add your handling code here:
                String Bilangan1 = input_bil1.getText(); 
		String Bilangan2 = input_bil2.getText();
		String Hasil = output_hasil.getText();
		try{
			Connection c = KoneksiDatabase.getKoneksi();
			String sql = "INSERT INTO `tabelkalkulator` VALUES (?, ?, ?)";
			try (PreparedStatement p = c.prepareStatement(sql)) {
				p.setString(1, Bilangan1);
				p.setString(2, Bilangan2);
				p.setString(3, Hasil);
				p.executeUpdate();
			}
		}catch(SQLException e){ System.out.println("Terjadi Error");
		}finally{
			loadData();
		}
    }//GEN-LAST:event_reportActionPerformed

    private void hapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hapusActionPerformed
        // TODO add your handling code here:
                int i = tabelCalculator.getSelectedRow(); 
		if(i == -1){ // tidak ada baris terseleksi 
		return; 
		} String Bilangan1 = (String) model.getValueAt(i, 0); 
		try{ Connection c = KoneksiDatabase.getKoneksi(); 
 
		String sql = "DELETE FROM `tabelkalkulator` WHERE Bilangan1 = ?"; 
 
			try (PreparedStatement p = c.prepareStatement(sql)) {
				p.setString(1, Bilangan1);
				p.executeUpdate();
			} 
		}catch(SQLException e){
		System.err.println("Terjadi Error") ;
		}finally{ 
		loadData();
		
        } 
    }//GEN-LAST:event_hapusActionPerformed

    private void printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printActionPerformed
        // TODO add your handling code here:
        try {
            Connection c = KoneksiDatabase.getKoneksi();
            try (Statement s = c.createStatement()) 
            {FileOutputStream fileOut;
            fileOut=new FileOutputStream("C:\\SMT6\\export.xls");  //Make an excel file in this directory at first
            HSSFWorkbook workbook=new HSSFWorkbook();
            HSSFSheet worksheet=workbook.createSheet("Sheet 0");
            Row row1=worksheet.createRow((short)0);
            row1.createCell(0).setCellValue("Bilangan1");
            row1.createCell(1).setCellValue("Bilangan2");
            row1.createCell(2).setCellValue("Hasil");
            
            Row row2;
                String sql = "SELECT * FROM `tabelkalkulator`";
                try (ResultSet r = s.executeQuery(sql)) 
                {while (r.next()) {
                        int a=r.getRow(); 
                        row2=worksheet.createRow((short)a);
                        row2.createCell(0).setCellValue(r.getString("Bilangan1"));
                        row2.createCell(1).setCellValue(r.getString("Bilangan2"));
                        row2.createCell(2).setCellValue(r.getString("Hasil"));
                    }
            workbook.write(fileOut);
            fileOut.flush();
            fileOut.close();
            r.close();
            s.close();
            c.close();
            javax.swing.JOptionPane.showMessageDialog(null, "Success");

            }catch (FileNotFoundException ex) {
                Logger.getLogger(kalkulatorrun.class.getName()).log(Level.SEVERE, null, ex);}
            }catch(IOException ioe){
                System.out.println(ioe);}
            } catch (SQLException e) {
            System.out.println("Terjadi Error");
        }
    }//GEN-LAST:event_printActionPerformed

    private void openActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openActionPerformed
        // TODO add your handling code here:
        JFileChooser jfc=new JFileChooser();
        jfc.showOpenDialog(null);
        
        File file=jfc.getSelectedFile();
        String dir=file.getAbsolutePath();
        
        txtDir.setText(dir);
    }//GEN-LAST:event_openActionPerformed

    private void output_hasilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_output_hasilActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_output_hasilActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(kalkulatorrun.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(kalkulatorrun.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(kalkulatorrun.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(kalkulatorrun.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new kalkulatorrun().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bagi;
    private javax.swing.JButton hapus;
    private javax.swing.JTextField input_bil1;
    private javax.swing.JTextField input_bil2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton kali;
    private javax.swing.JButton keluar;
    private javax.swing.JButton kurang;
    private javax.swing.JButton open;
    private javax.swing.JTextField output_hasil;
    private javax.swing.JButton print;
    private javax.swing.JButton report;
    private javax.swing.JTable tabelCalculator;
    private javax.swing.JButton tambah;
    private javax.swing.JTextField txtDir;
    // End of variables declaration//GEN-END:variables
}
